class Solution {
public:
    bool isIsomorphic(string s, string t) {
        unordered_map<char, int> s_map;
        unordered_map<char, int> t_map;
        vector<int> s_vec;
        vector<int> t_vec;
        for(int i=0; i < s.size(); i++){
            s[i] = tolower(s[i]);
            auto it = s_map.find(s[i]);
            if(it == s_map.end()){
                s_map[s[i]] = s_vec.size();
                s_vec.push_back(1);
            }  
            else{
                s_vec[s_map[s[i]]]++;
            }
        }
        for(int i=0; i < t.size(); i++){
            t[i] = tolower(t[i]);
            auto it = t_map.find(t[i]);
            if(it == t_map.end()){
                t_map[t[i]] = t_vec.size();
                t_vec.push_back(1);
            }  
            else{
                t_vec[s_map[s[i]]]++;
            }
        }
        if(s_vec == t_vec)
            return true;
        return false;
    }
};