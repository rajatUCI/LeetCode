/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> result;
        if(root == NULL)
            return result;
        
        queue <TreeNode*> tree_queue;
        tree_queue.push(root);  
        double sum = 0.0;
        int count = 0;

        while(!tree_queue.empty()){
            sum = 0.0;
            count = 0;
            queue <TreeNode*> temporary_queue;

            while(!tree_queue.empty()){
                TreeNode* node = tree_queue.front();
                tree_queue.pop();
                sum += node-> val;
                count++;
                if(node->left != NULL){
                    temporary_queue.push(node->left);
                }
                if(node->right != NULL){
                    temporary_queue.push(node->right);
                }
            }
            tree_queue = temporary_queue;
            result.push_back(sum/count);
        }
        return result;
    }
};