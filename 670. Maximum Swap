class Solution {
public:
    int maximumSwap(int num) {
        vector<int> digits;
        while(num > 0){
            digits.push_back(num % 10);
            num /= 10;
        }
        reverse(digits.begin(), digits.end());
        for(int i = 0; i < digits.size()-1; i++){
            int max_value = *max_element(digits.begin()+i+1, digits.end());
            if(digits[i] < max_value){
                for(int j = digits.size()-1; j > i; j--){
                    if(digits[j] == max_value){
                        swap(digits[i], digits[j]);
                        break;
                    }
                }
                break;
            }
        }
        int result = 0;
        int power = 1;
        for(int i = digits.size()-1; i >= 0; i--){
            result += (power*digits[i]);
            power *= 10;
        }
        return result;
    }
};