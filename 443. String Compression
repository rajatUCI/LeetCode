class Solution {
public:
    void inPlace(vector<char>& chars, int &i1, int &i2, int &count){
        i1++;
        if(count != 1){
            string counter = to_string(count);
            for(int j=0; j<counter.size(); j++){
                chars[i1+j] = counter[j];
            }
            i1 += counter.size();
            chars[i1] = chars[i2];
            count = 1;
        }
        else{
            chars[i1] = chars[i2];
        }
    }
    int compress(vector<char>& chars) {
        if(chars.size() == 1){
            return 1;
        }   
        int i1, i2, count;
        i1 = 0; i2 = 0; count = 1;
        for(int i = 1; i<chars.size(); i++){
            i2 = i;
            if(chars[i1] == chars[i2]){
                count ++;
            }
            else{
                inPlace(chars, i1, i2, count);
            }
        }
        inPlace(chars, i1, i2, count);
        return i1;
    }
};