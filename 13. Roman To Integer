class Solution {
public:
    int romanToInt(string s) {
        if(s.size() == 0)
            return 0;  
        unordered_map<string, int> mymap =  { 
                                                { "I" , 1 },
                                                { "IV" , 4 },
                                                { "V" , 5 },
                                                { "IX" , 9 },
                                                { "X" , 10 },
                                                { "XL" , 40 },
                                                { "L" , 50 },
                                                { "XC" , 90 },
                                                { "C" , 100 },
                                                { "CD" , 400 },
                                                { "D" , 500 },
                                                { "CM" , 900 },
                                                { "M" , 1000 } 
                                            };
         if(s.size() == 1){
             string str;
             str.push_back(s[0]);
             return mymap[str];
         }
        int sum = 0;
        string str;
        int i = 0;
        for(i = 0; i < s.size(); i++){
            str = "";
            s[i] = toupper(s[i]);
            str.push_back(s[i]);
            if(s[i] == 'I'){
                if((i != s.size()-1) && (s[i+1] == 'V' || s[i+1] == 'X')){
                    str.push_back(s[i+1]);
                    i++;
                }       
            }
            else if(s[i] == 'X'){
                if((i != s.size()-1) && (s[i+1] == 'L' || s[i+1] == 'C')){
                    str.push_back(s[i+1]);
                    i++;
                }       
            }
            else if(s[i] == 'C'){
                if((i != s.size()-1) && (s[i+1] == 'D' || s[i+1] == 'M')){
                    str.push_back(s[i+1]);
                    i++;
                }       
            }
            sum += mymap[str];
        }
        return sum;
    }
};